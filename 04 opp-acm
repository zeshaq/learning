
OpenShift Advanced Cluster Management (ACM) for Kubernetes

ACM is a multi-cluster management platform that provides a single pane of glass for:

Cluster lifecycle (creation, import, upgrade)

Application lifecycle (GitOps, Helm, OLM)

Policy-based governance, risk, and compliance

Observability and search across all clusters

It manages Kubernetes and OpenShift clusters across hybrid and multi-cloud environments.


OpenShift Advanced Cluster Management (ACM)
├── 1. Core Architecture
│   ├── Hub Cluster
│   │   ├── Central management cluster (control plane)
│   │   ├── Runs ACM operator and core components
│   │   ├── Stores managed cluster states in etcd
│   │   └── Deploys CRDs for multicluster resources
│   ├── Managed Clusters
│   │   ├── Any OCP or K8s cluster (imported or created)
│   │   ├── Register via klusterlet agent
│   │   ├── Communicates securely with the hub
│   │   └── Reports health, metrics, and status
│   ├── Core Components (Hub-side)
│   │   ├── multicluster-observability-operator
│   │   ├── governance-policy-framework
│   │   ├── multicluster-operators-channel
│   │   ├── multicluster-operators-application
│   │   ├── multicluster-operators-subscription
│   │   ├── cluster-lifecycle-operator
│   │   ├── search-collector and search-aggregator
│   │   └── console plugin (ACM UI integration in OCP Console)
│   ├── Klusterlet (Managed Cluster Agent)
│   │   ├── Agent installed on each managed cluster
│   │   ├── Handles registration, status sync, policy compliance
│   │   ├── Pulls manifests and subscriptions from hub
│   │   └── Includes:
│   │       ├── registration-agent
│   │       ├── work-agent
│   │       ├── cert rotation controller
│   │       └── managedcluster-info collector
│   └── Communication
│       ├── Secure channel via Kubernetes Secrets and CSR
│       ├── Pull model (managed → hub)
│       ├── ManagedClusterSet for grouping
│       └── Open Cluster Management APIs (OCM APIs)

├── 2. Cluster Lifecycle Management
│   ├── Cluster Creation
│   │   ├── Create new OpenShift clusters via:
│   │   │   ├── Assisted Installer (Bare metal, vSphere, etc.)
│   │   │   ├── Hive Operator (automated provisioning)
│   │   │   ├── AWS / Azure / GCP / vSphere
│   │   │   ├── ROSA / ARO integration
│   │   │   └── Agent-based installer support
│   ├── Cluster Import
│   │   ├── Import existing OpenShift/Kubernetes clusters
│   │   ├── Automated via kubeconfig or CLI
│   │   └── Supports EKS, AKS, GKE, RKE2, MicroK8s, etc.
│   ├── Cluster Lifecycle Operations
│   │   ├── Cluster scaling (worker node add/remove)
│   │   ├── Version upgrades (OpenShift)
│   │   ├── Backup and restore integration
│   │   └── Hub-driven cluster destruction
│   ├── Cluster Sets & Pools
│   │   ├── ManagedClusterSet (grouping)
│   │   ├── ManagedClusterPool (for provisioning clusters)
│   │   ├── Cluster claims / binding (multi-tenant separation)
│   │   └── Placement rules (targeting clusters)
│   ├── Cluster Templates
│   │   ├── Hive ClusterDeployment YAML
│   │   ├── Custom labels and secrets
│   │   └── Parameterized provisioning templates
│   └── Cluster Status & Health
│       ├── Heartbeat, version, node status
│       ├── Cluster upgrade compliance
│       ├── Add-on status reports
│       └── Certificate renewal status

├── 3. Application Lifecycle Management
│   ├── Multicluster Applications
│   │   ├── Deploy and manage workloads across clusters
│   │   ├── Application resource (kind: Application)
│   │   ├── Channel and Subscription model
│   │   ├── Placement rules define target clusters
│   │   └── Sync policies: automatic / manual / rolling
│   ├── Channels
│   │   ├── Source of deployable resources
│   │   ├── Types:
│   │   │   ├── Git
│   │   │   ├── Helm repository
│   │   │   ├── Object storage (S3, MinIO)
│   │   │   └── Namespace (internal resources)
│   │   └── Channel CRD (manages source location & auth)
│   ├── Subscriptions
│   │   ├── Define how to pull apps from channels
│   │   ├── Version / tag / branch selectors
│   │   ├── Deploys resources via hub to target clusters
│   │   └── Reconciles updates automatically
│   ├── Placement Rules
│   │   ├── Determine target clusters dynamically
│   │   ├── Filters:
│   │   │   ├── Labels
│   │   │   ├── Cluster health
│   │   │   ├── Resource availability
│   │   │   └── Compliance status
│   │   └── Works with policies, apps, and governance
│   ├── Helm & Operator Integration
│   │   ├── Deploy Helm charts
│   │   ├── Support for OLM-based Operators
│   │   └── Syncs operator subscriptions across clusters
│   ├── GitOps Integration
│   │   ├── Native integration with Argo CD (OpenShift GitOps)
│   │   ├── Manages multi-cluster Argo applications
│   │   └── Placement-driven GitOps delivery
│   └── Application Observability
│       ├── Application topology visualization
│       ├── Sync and drift status
│       ├── Cluster-level resource states
│       └── Rollback capabilities

├── 4. Governance, Risk, and Compliance (GRC)
│   ├── Policy Framework
│   │   ├── Policies are YAML-based Kubernetes resources
│   │   ├── Evaluate compliance status per cluster
│   │   ├── Enforce automatically or audit-only
│   │   ├── Categories:
│   │   │   ├── Security (e.g., no privileged containers)
│   │   │   ├── Configuration (namespace quotas)
│   │   │   ├── RBAC & access control
│   │   │   ├── Network (deny-all policies)
│   │   │   ├── Pod security standards
│   │   │   └── Integration (ACS/OPA/Gatekeeper)
│   ├── Policy Propagation
│   │   ├── Distribute policies across clusters
│   │   ├── Use PlacementRules for targeting
│   │   └── Support for hub-local and remote policies
│   ├── Compliance Dashboards
│   │   ├── Per-policy compliance view
│   │   ├── Cluster compliance summary
│   │   ├── Policy violation trends
│   │   └── Exportable audit reports (CSV/PDF)
│   ├── Integration with ACS (Security)
│   │   ├── Import security violations from ACS
│   │   ├── Enforce runtime security policies globally
│   │   └── Combined risk visibility
│   ├── OPA / Gatekeeper Integration
│   │   ├── Deploy constraint templates
│   │   ├── Reuse OPA Rego policies in ACM
│   │   └── Hybrid enforcement (K8s-native + OPA)
│   └── Policy Automation
│       ├── Remediation actions
│       ├── Event-driven compliance handling
│       └── Notification to SIEM / ticketing systems

├── 5. Observability and Search
│   ├── Multi-cluster Observability (MCO)
│   │   ├── Powered by Thanos + Prometheus stack
│   │   ├── Collects metrics from managed clusters
│   │   ├── Centralized dashboard on hub
│   │   ├── Retention and aggregation configuration
│   │   └── Supports OpenShift Monitoring integration
│   ├── Logging Integration
│   │   ├── Forward logs to centralized collector
│   │   ├── Integrate with Loki / Elasticsearch / Splunk
│   │   └── Aggregated view in console
│   ├── Search Framework
│   │   ├── Search Collector (runs on managed clusters)
│   │   ├── Search Aggregator (hub-side)
│   │   ├── Full-text index of K8s objects
│   │   ├── Global search across clusters/namespaces
│   │   └── CLI and UI-based filtering
│   ├── Visualization
│   │   ├── Topology view of clusters and resources
│   │   ├── Application-level resource mapping
│   │   └── Policy compliance overlays
│   └── Alerts and Metrics
│       ├── Cluster health metrics
│       ├── Policy violation alerts
│       ├── Application sync status
│       └── Integration with Prometheus Alertmanager

├── 6. Integrations and APIs
│   ├── API Access
│   │   ├── OCM API (REST / Kubernetes CRD)
│   │   ├── Cluster API integration (CAPI)
│   │   ├── Policy API
│   │   ├── Placement API
│   │   └── Search API
│   ├── Authentication
│   │   ├── Uses OpenShift OAuth (RBAC integrated)
│   │   ├── Hub-level SSO (RH-SSO / Keycloak)
│   │   └── Custom OIDC support
│   ├── Notifications / Webhooks
│   │   ├── Email, Slack, PagerDuty, Webhooks
│   │   └── SIEM integration (Splunk, QRadar)
│   ├── External Tool Integrations
│   │   ├── Red Hat ACS (security)
│   │   ├── Red Hat Quay (registry)
│   │   ├── OpenShift GitOps (Argo CD)
│   │   ├── Red Hat Insights
│   │   └── ServiceNow / Jira
│   └── Automation & CLI Tools
│       ├── acm-cli (CLI utilities for policy and cluster ops)
│       ├── oc + kubectl for CRDs
│       ├── REST API for automation
│       └── GitOps-based declarative ACM config

├── 7. Infrastructure and Deployment
│   ├── Installation
│   │   ├── OperatorHub (ACM Operator)
│   │   ├── Helm chart (upstream OCM)
│   │   ├── air-gapped / disconnected installs
│   │   └── OpenShift Console plug-in enabled
│   ├── Multi-tenancy
│   │   ├── ManagedClusterSetBindings
│   │   ├── Namespace isolation
│   │   └── Role-based access control per cluster set
│   ├── Backup & Restore
│   │   ├── Hub backup via Velero / ACM backup CR
│   │   ├── Disaster recovery with cluster restore
│   │   └── Configuration snapshots
│   ├── High Availability
│   │   ├── Hub HA (multi-replica components)
│   │   ├── External DB scaling (PostgreSQL/etcd)
│   │   └── Klusterlet resiliency
│   └── Upgrades & Lifecycle
│       ├── Automatic via Operator
│       ├── Manual hub upgrade via subscription
│       └── Managed cluster rolling upgrade orchestration

└── 8. User Interface (Console)
    ├── OpenShift Console Plug-in
    │   ├── Cluster list and details view
    │   ├── Application topology visualization
    │   ├── Governance and policy dashboards
    │   ├── Observability metrics
    │   └── Integrated search bar
    ├── Cluster Dashboard
    │   ├── Health, version, compliance
    │   ├── Resource utilization
    │   └── Policy compliance summary
    ├── Application Dashboard
    │   ├── Deployment state
    │   ├── Topology graph
    │   ├── Cluster placement and drift
    │   └── Subscription channels view
    ├── Governance Dashboard
    │   ├── Compliance status by policy
    │   ├── Non-compliant clusters summary
    │   └── Remediation actions
    └── Search UI
        ├── Filter by cluster, namespace, kind, label
        ├── Export search results
        └── Cross-cluster object drilldown



Key ACM Custom Resources (CRDs)

| CRD                         | Description                                |
| --------------------------- | ------------------------------------------ |
| `ManagedCluster`            | Represents each cluster managed by the hub |
| `ManagedClusterSet`         | Logical grouping of clusters               |
| `Placement`                 | Defines selection rules for clusters       |
| `Policy`                    | Defines governance or compliance rule      |
| `Application`               | Represents multicluster app                |
| `Subscription`              | Controls app deployment from channel       |
| `Channel`                   | Defines source repository for apps         |
| `ClusterDeployment`         | Hive-based cluster creation template       |
| `ClusterPool`               | Pool of pre-provisioned clusters           |
| `MultiClusterObservability` | Controls observability stack               |
| `SearchCollector`           | Collects data from managed clusters        |




Data Flow Summary

[Hub Cluster]
   ├── Policies, applications, placement rules
   ├── Observability stack, governance framework
   ↓
[Klusterlet Agents on Managed Clusters]
   ├── Pull manifests (apps/policies)
   ├── Report health and compliance
   ↓
[Hub Central DB + Console]
   ├── Aggregates data (metrics, compliance, topology)
   ├── Displays unified dashboards
   └── Exposes APIs for automation / GitOps


Example ACM Use Cases

Provision and manage 100+ OpenShift clusters (hybrid/multi-cloud)

Enforce security & compliance policies across environments

Deploy applications from Git across clusters (GitOps)

Visualize global application topology and cluster health

Aggregate metrics and logs for fleet observability

Automate cluster patching and lifecycle via Hive + Policies


